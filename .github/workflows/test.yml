name: Test & lint

on:
  push:
    branches: main
  pull_request:

jobs:
  check-linux:
    name: Test & lint ${{ matrix.config.os }}
    runs-on: ${{ matrix.config.os }}

    strategy:
      fail-fast: false
      matrix:
        config:
          - { os: ubuntu-latest }

    services:
      cosmosdb:
        image: mcr.microsoft.com/cosmosdb/linux/azure-cosmos-emulator:latest
        ports:
          - 8081:8081
          - 10250-10255:10250-10255

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true

      - name: Create env file
        run: |
          touch .env
          echo COSMOS_URL=https://localhost:8081 >> .env
          echo COSMOS_KEY=${{ secrets.COSMOS_EMULATOR_KEY }} >> .env
          echo COSMOS_USE_EMULATOR=True >> .env

      - name: Install the project
        run: uv sync --locked --all-extras --dev

      - name: Run linter
        run: uvx ruff check .

      - name: Run type check
        run: uv run basedpyright

      - name: Run tests
        run: uv run pytest --error-for-skips


  check:
    name: Test & lint ${{ matrix.config.os }}
    runs-on: ${{ matrix.config.os }}

    strategy:
      fail-fast: false
      matrix:
        config:
          - { os: macos-latest  }
          - { os: windows-latest }

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true

      - name: Create env file
        run: |
          touch .env
          echo COSMOS_URL=https://localhost:8081 >> .env
          echo COSMOS_KEY=${{ secrets.COSMOS_EMULATOR_KEY }} >> .env

      - name: Install the project
        run: uv sync --locked --all-extras --dev

      - name: Run linter
        run: uvx ruff check .

      - name: Run type check
        run: uv run basedpyright

      - name: Run tests
        run: uv run pytest
